{"version":3,"sources":["webpack:///./src/components/aside/AsideLinuxKernelComments.vue?ed36","webpack:///src/components/aside/AsideLinuxKernelComments.vue","webpack:///./src/components/aside/AsideLinuxKernelComments.vue?1a71","webpack:///./src/components/aside/AsideLinuxKernelComments.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","fail","_e","directives","name","rawName","value","expression","attrs","index","slot","_v","_l","folder","idx","key","on","clickFolder","_s","failReason","staticRenderFns","props","data","repo","notes","loading","methods","loadNotes","$http","get","url","then","chapter_reg","test","response","i","$router","push","path","query","created","component"],"mappings":"uHAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAAGJ,EAAIM,KAAklBN,EAAIO,KAAhlBH,EAAG,aAAa,CAACI,WAAW,CAAC,CAACC,KAAK,UAAUC,QAAQ,YAAYC,MAAOX,EAAW,QAAEY,WAAW,YAAYC,MAAM,CAAC,MAAQZ,KAAKa,MAAQ,KAAK,CAACV,EAAG,WAAW,CAACW,KAAK,SAAS,CAACX,EAAG,OAAO,CAACJ,EAAIgB,GAAG,0CAA0ChB,EAAIiB,GAAIjB,EAAS,OAAE,SAASkB,EAAOC,GAAK,OAAOf,EAAG,eAAe,CAACI,WAAW,CAAC,CAACC,KAAK,UAAUC,QAAQ,YAAYC,MAAOX,EAAW,QAAEY,WAAW,YAAYQ,IAAIF,EAAOT,KAAKI,MAAM,CAAC,KAAOK,EAAO,MAAQlB,EAAIc,MAAQ,KAAOK,EAAM,IAAIE,GAAG,CAAC,MAAQrB,EAAIsB,cAAc,CAAClB,EAAG,WAAW,CAACW,KAAK,SAAS,CAACX,EAAG,OAAO,CAACJ,EAAIgB,GAAG,OAAOhB,EAAIuB,GAAGL,EAAOT,MAAM,UAAU,OAAM,GAAaT,EAAQ,KAAEI,EAAG,WAAW,CAACS,MAAM,CAAC,MAAQ,iBAAiB,KAAO,QAAQ,YAAcb,EAAIwB,WAAW,UAAW,EAAM,YAAY,MAAMxB,EAAIO,MAAM,IAC11BkB,EAAkB,GCqDtB,G,UAAA,CACEC,MAAO,CAAC,SAERC,KAAM,WACJ,MAAO,CACLC,KAAM,8BAENC,MAAO,KACPC,SAAS,EACTxB,MAAM,EACNkB,WAAY,KAIhBO,QAAS,CAGPC,UAAW,WAAf,WACA,kCACA,uBACA,0BACA,oBAEM/B,KAAK6B,SAAU,EAGf7B,KAAKgC,MAAMC,IAAIC,GAAKC,MAAK,SAA/B,GAEQ,EAAR,SACQ,IAAK,IAAb,wBACU,GAAIC,EAAYC,KAAKC,EAASZ,KAAKa,GAAG/B,MAAO,CAAvD,MACA,YADA,EACA,OADA,EACA,KACY,EAAZ,4BAKQ,EAAR,cAGQ,EAAR,cAEA,mBAEQ,EAAR,QACQ,EAAR,yBAIIa,YAAa,SAAjB,GACM,IAAN,qBACMrB,KAAKwC,QAAQC,KAAK,CAChBC,KAAM,YACNC,MAAO,CACLhB,KAAM3B,KAAK2B,KACXe,KAAV,KAEA,yBAKEE,QAAS,WAEP5C,KAAK+B,eCtHwW,I,YCO7Wc,EAAY,eACd,EACA/C,EACA0B,GACA,EACA,KACA,KACA,MAIa,aAAAqB,E","file":"js/chunk-2d0b24fe.fcebead4.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[(!_vm.fail)?_c('el-submenu',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.loading),expression:\"loading\"}],attrs:{\"index\":this.index + ''}},[_c('template',{slot:\"title\"},[_c('span',[_vm._v(\" üêß Linux Kernel Comments (notes) \")])]),_vm._l((_vm.notes),function(folder,idx){return _c('el-menu-item',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.loading),expression:\"loading\"}],key:folder.name,attrs:{\"meta\":folder,\"index\":_vm.index + '-' + (idx + 1)},on:{\"click\":_vm.clickFolder}},[_c('template',{slot:\"title\"},[_c('span',[_vm._v(\" üìÇ \"+_vm._s(folder.name)+\" \")])])],2)})],2):_vm._e(),(_vm.fail)?_c('el-alert',{attrs:{\"title\":\"Loading failed\",\"type\":\"error\",\"description\":_vm.failReason,\"closable\":false,\"show-icon\":\"\"}}):_vm._e()],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<!-- \r\n\r\n  @author - Mr Dk.\r\n  @version - 2020/01/27\r\n\r\n  @description - \r\n    The aside component for displaying Linux-Kernel-Comments\r\n    Loading the resource from GitHub using GitHub API v3\r\n\r\n-->\r\n\r\n<template>\r\n  <div>\r\n\r\n    <!-- Sub-menu of notes -->\r\n    <el-submenu\r\n      v-if=\"!fail\"\r\n      v-loading=\"loading\"\r\n      :index=\"this.index + ''\">\r\n      \r\n      <template slot=\"title\">\r\n        <span> üêß Linux Kernel Comments (notes) </span>\r\n      </template>\r\n\r\n      <!-- Every notes -->\r\n      <el-menu-item\r\n        v-for=\"(folder, idx) in notes\"\r\n        v-loading=\"loading\"\r\n        @click=\"clickFolder\"\r\n        :meta=\"folder\"\r\n        :key=\"folder.name\"\r\n        :index=\"index + '-' + (idx + 1)\">\r\n\r\n        <template slot=\"title\">\r\n          <span> üìÇ {{ folder.name }} </span>\r\n        </template>\r\n\r\n      </el-menu-item>\r\n    </el-submenu>\r\n\r\n    <!-- Loading failure -->\r\n    <el-alert\r\n      v-if=\"fail\"\r\n      title=\"Loading failed\"\r\n      type=\"error\"\r\n      :description=\"failReason\"\r\n      :closable=\"false\"\r\n      show-icon>\r\n    </el-alert>\r\n    \r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: [\"index\"],\r\n\r\n  data: function () {\r\n    return {\r\n      repo: \"linux_kernel_comments_notes\",\r\n\r\n      notes: null, // For repository data storage\r\n      loading: true, // For displaying the status of loading data\r\n      fail: false, // For displaying the result of HTTP request\r\n      failReason: \"\" // For displaying the reason of HTTP request failure\r\n    }\r\n  },\r\n\r\n  methods: {\r\n\r\n    // Loading all notes of how-linux-works repository\r\n    loadNotes: function () {\r\n      const apis = this.$store.state.githubapi.api;\r\n      const url = apis[this.repo].content;\r\n      const chapter_reg = apis[this.repo].dir_filter;\r\n      const chapter_sorter = apis[this.repo].sort;\r\n      // Set loading status\r\n      this.loading = true;\r\n\r\n      // Issue HTTP request\r\n      this.$http.get(url).then(response => {\r\n\r\n        this.notes = [];\r\n        for (let i = 0; i < response.data.length; i++) {\r\n          if (chapter_reg.test(response.data[i].name)) {\r\n            let { name, path } = response.data[i];\r\n            this.notes.push({ name, path });\r\n          }\r\n        }\r\n\r\n        // Sort the notes according to chapter index\r\n        this.notes.sort(chapter_sorter);\r\n\r\n        // Directories loading complete\r\n        this.loading = false;\r\n\r\n      }).catch(error => {\r\n        // HTTP failed\r\n        this.fail = true;\r\n        this.failReason = error.message;\r\n      });\r\n    },\r\n\r\n    clickFolder: function (folder) {\r\n      let path = folder.$attrs.meta.path;\r\n      this.$router.push({\r\n        path: \"/notelist\",\r\n        query: {\r\n          repo: this.repo,\r\n          path\r\n        }\r\n      }).catch(err => { err });\r\n    }\r\n\r\n  },\r\n  \r\n  created: function () {\r\n    // Initializing the data from GitHub\r\n    this.loadNotes();\r\n  }\r\n}\r\n</script>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AsideLinuxKernelComments.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AsideLinuxKernelComments.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./AsideLinuxKernelComments.vue?vue&type=template&id=708c7884&\"\nimport script from \"./AsideLinuxKernelComments.vue?vue&type=script&lang=js&\"\nexport * from \"./AsideLinuxKernelComments.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}